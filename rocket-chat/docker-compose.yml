version: '2'

services:
  rocketchat:
    image: rocketchat/rocket.chat:latest
    container_name: rocket_chat_rocketchat
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - /srv/data/rocket-chat/uploads:/app/uploads
    environment:
      - PORT=3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
    depends_on:
      - mongo
    ports:
      - 3000:3000
    networks:
      backend:
        ipv4_address: 10.0.6.3

  mongo:
    image: mongo:4.0
    container_name: rocket_chat_mongodb
    restart: unless-stopped
    volumes:
     - /srv/data/rocket-chat/data/db:/data/db
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    labels:
      - "traefik.enable=false"
    networks:
      backend:
        ipv4_address: 10.0.6.4

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4.0
    container_name: rocket_chat_mongo_init_replica
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo
    networks:
      backend:
        ipv4_address: 10.0.6.5

  nginx:
    image: fsinf/nginx:latest
    container_name: rocket_chat_nginx
    ports:
      - "134.2.220.61:8445:443"
    volumes:
      - /srv/docker-certificates/chat.fsi.uni-tuebingen.de/:/etc/nginx/ssl:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-rocket_chat.conf:/etc/nginx/sites-enabled/nginx-rocket_chat.conf:ro
      - /srv/docker/shared/nginx/ssl.conf:/etc/nginx/shared/ssl.conf:ro
      - /srv/docker/shared/nginx/security-headers.conf:/etc/nginx/shared/security-headers.conf:ro
    restart: always
    networks:
      backend:
        ipv4_address: 10.0.6.2
    restart: always

networks:
  backend:
    ipam:
      config:
        - subnet: 10.0.6.0/24
